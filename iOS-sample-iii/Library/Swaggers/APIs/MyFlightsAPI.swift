//
// MyFlightsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class MyFlightsAPI {
    /**
     Boarding Pass Detail
     
     - parameter iTripId: (form) Trip Id 
     - parameter accessToken: (header)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func boardingPassDetailPost(iTripId: String, accessToken: String, completion: @escaping ((_ data: BoardingPassDetailResponse?,_ error: Error?) -> Void)) {
        boardingPassDetailPostWithRequestBuilder(iTripId: iTripId, accessToken: accessToken).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Boarding Pass Detail
     - POST /boarding_pass_detail
     - examples: [{contentType=application/json, example={
  "message" : "Boarding Pass Detail information",
  "data" : {
    "iTripId" : 3,
    "iBookingId" : 3,
    "iTripType" : 1,
    "iTripBookingType" : 1,
    "iDepartureDate" : 1583020800,
    "iDepartureTime" : 1582628400,
    "iAircraftId" : 2,
    "vAircraftName" : "Regional jet",
    "vQrCode" : "http://172.16.17.224/projects/air-charter-booking/public/uploads/qr-code/Booking3.png",
    "dcTotalPrice" : 800,
    "iCreatedAt" : 1585294435,
    "vAircraftType" : "Super Mid Jet\\t",
    "iAircraftImageId" : "1",
    "vAircraftImageName" : "image.jpeg",
    "vAircraftImageThumb" : "thumb.jpeg",
    "departureDetail" : {
      "iDepartureId" : 1,
      "vId" : "KAIK",
      "vAirportName" : "Aiken Regional Airport",
      "vZipcode" : "29805",
      "vCity" : "Aiken"
    },
    "destinationDetail" : {
      "iDestinationId" : 1,
      "vId" : "KAIK",
      "vAirportName" : "Aiken Regional Airport",
      "vZipcode" : "29805",
      "vCity" : "Aiken"
    },
    "passengersDetail" : [ {
      "iBookingId" : 3,
      "iPassengerId" : 4,
      "vPassengerName" : "P31",
      "vPassengerId" : "/tmp/phprC9fv3",
      "dPassengerDob" : "1992-02-02"
    }, {
      "iBookingId" : 3,
      "iPassengerId" : 5,
      "vPassengerName" : "P32",
      "vPassengerId" : "/tmp/php446nDU",
      "dPassengerDob" : "1992-02-02"
    } ]
  }
}}]
     
     - parameter iTripId: (form) Trip Id 
     - parameter accessToken: (header)  

     - returns: RequestBuilder<BoardingPassDetailResponse> 
     */
    open class func boardingPassDetailPostWithRequestBuilder(iTripId: String, accessToken: String) -> RequestBuilder<BoardingPassDetailResponse> {
        let path = "/boarding_pass_detail"
        let URLString = SwaggerClientAPI.basePath + path
        let formParams: [String:Any?] = [
            "iTripId": iTripId
        ]

        let nonNullParameters = APIHelper.rejectNil(formParams)
        let parameters = APIHelper.convertBoolToString(nonNullParameters)
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "AccessToken": accessToken
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<BoardingPassDetailResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Boarding Pass Lists
     
     - parameter accessToken: (header)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func boardingPassPost(accessToken: String, completion: @escaping ((_ data: BoardingPassListResponse?,_ error: Error?) -> Void)) {
        boardingPassPostWithRequestBuilder(accessToken: accessToken).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Boarding Pass Lists
     - POST /boarding_pass
     - examples: [{contentType=application/json, example={
  "message" : "Boarding Pass List information",
  "data" : [ {
    "iTripId" : 1,
    "iBookingId" : 1,
    "iTripType" : 2,
    "iTripBookingType" : 2,
    "iDepartureDate" : 1583020800,
    "iDepartureTime" : 1582628400,
    "iAircraftId" : 2,
    "vAircraftName" : "Regional jet",
    "vQrCode" : "http://172.16.17.224/projects/air-charter-booking/public/uploads/qr-code/Booking1.png",
    "dcTotalPrice" : 2222,
    "iCreatedAt" : 1585294435,
    "vAircraftType" : "Super Mid Jet\\t",
    "dcPriceForFlight" : 100000,
    "dcPricePerSeat" : 1000,
    "iAircraftImageId" : "1",
    "vAircraftImageName" : "image.jpeg",
    "vAircraftImageThumb" : "thumb.jpeg",
    "departureDetail" : {
      "iDepartureId" : 1,
      "vId" : "KAIK",
      "vAirportName" : "Aiken Regional Airport",
      "vZipcode" : "29805",
      "vCity" : "Aiken"
    },
    "destinationDetail" : {
      "iDestinationId" : 1,
      "vId" : "KAIK",
      "vAirportName" : "Aiken Regional Airport",
      "vZipcode" : "29805",
      "vCity" : "Aiken"
    },
    "passengersDetail" : [ {
      "iBookingId" : 1,
      "iPassengerId" : 1,
      "vPassengerName" : "P1",
      "vPassengerId" : "/tmp/php9XNa2U",
      "dPassengerDob" : "1992-02-02"
    }, {
      "iBookingId" : 1,
      "iPassengerId" : 2,
      "vPassengerName" : "P2",
      "vPassengerId" : "/tmp/php86tI6I",
      "dPassengerDob" : "1992-02-02"
    } ]
  }, {
    "iTripId" : 2,
    "iBookingId" : 2,
    "iTripType" : 0,
    "iTripBookingType" : 0,
    "iDepartureDate" : 1583020800,
    "iDepartureTime" : 1582628400,
    "iAircraftId" : 1,
    "vAircraftName" : "328 jet",
    "vQrCode" : "http://172.16.17.224/projects/air-charter-booking/public/uploads/qr-code/Booking2.png",
    "dcTotalPrice" : 3212,
    "iCreatedAt" : 1585294435,
    "vAircraftType" : "Jet Airliner",
    "dcPriceForFlight" : 100000,
    "dcPricePerSeat" : 1000,
    "iAircraftImageId" : "1",
    "vAircraftImageName" : "image.jpeg",
    "vAircraftImageThumb" : "thumb.jpeg",
    "departureDetail" : {
      "iDepartureId" : 1,
      "vId" : "KAIK",
      "vAirportName" : "Aiken Regional Airport",
      "vZipcode" : "29805",
      "vCity" : "Aiken"
    },
    "destinationDetail" : {
      "iDestinationId" : 1,
      "vId" : "KAIK",
      "vAirportName" : "Aiken Regional Airport",
      "vZipcode" : "29805",
      "vCity" : "Aiken"
    },
    "passengersDetail" : [ {
      "iBookingId" : 2,
      "iPassengerId" : 3,
      "vPassengerName" : "P21",
      "vPassengerId" : "/tmp/phpi8xrvC",
      "dPassengerDob" : "1992-02-02"
    } ]
  } ]
}}]
     
     - parameter accessToken: (header)  

     - returns: RequestBuilder<BoardingPassListResponse> 
     */
    open class func boardingPassPostWithRequestBuilder(accessToken: String) -> RequestBuilder<BoardingPassListResponse> {
        let path = "/boarding_pass"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "AccessToken": accessToken
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<BoardingPassListResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Cancle Flight
     
     - parameter iTripId: (form) Trip Id 
     - parameter iPassengerId: (form) Passenger Id (comma seperated ids) 
     - parameter accessToken: (header)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func cancleFlightPost(iTripId: String, iPassengerId: String, accessToken: String, completion: @escaping ((_ data: SuccessResponse?,_ error: Error?) -> Void)) {
        cancleFlightPostWithRequestBuilder(iTripId: iTripId, iPassengerId: iPassengerId, accessToken: accessToken).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Cancle Flight
     - POST /cancle_flight
     - examples: [{contentType=application/json, example={
  "message" : "Booking successfully cancelled."
}}]
     
     - parameter iTripId: (form) Trip Id 
     - parameter iPassengerId: (form) Passenger Id (comma seperated ids) 
     - parameter accessToken: (header)  

     - returns: RequestBuilder<SuccessResponse> 
     */
    open class func cancleFlightPostWithRequestBuilder(iTripId: String, iPassengerId: String, accessToken: String) -> RequestBuilder<SuccessResponse> {
        let path = "/cancle_flight"
        let URLString = SwaggerClientAPI.basePath + path
        let formParams: [String:Any?] = [
            "iTripId": iTripId,
            "iPassengerId": iPassengerId
        ]

        let nonNullParameters = APIHelper.rejectNil(formParams)
        let parameters = APIHelper.convertBoolToString(nonNullParameters)
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "AccessToken": accessToken
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<SuccessResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Past Flights
     
     - parameter accessToken: (header)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func pastFlightsPost(accessToken: String, completion: @escaping ((_ data: PastFlightsResponse?,_ error: Error?) -> Void)) {
        pastFlightsPostWithRequestBuilder(accessToken: accessToken).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Past Flights
     - POST /past_flights
     - examples: [{contentType=application/json, example={
  "message" : "Past Flights information",
  "data" : [ {
    "iTripId" : 1,
    "iBookingId" : 1,
    "iTripType" : 2,
    "iTripBookingType" : 2,
    "iDepartureDate" : 1583020800,
    "iDepartureTime" : 1582628400,
    "iAircraftId" : 2,
    "vAircraftName" : "Regional jet",
    "vQrCode" : "http://172.16.17.224/projects/air-charter-booking/public/uploads/qr-code/Booking1.png",
    "dcTotalPrice" : "2222.00",
    "iCreatedAt" : 1585294435,
    "vAircraftType" : "Super Mid Jet\\t",
    "dcPriceForFlight" : "100000",
    "dcPricePerSeat" : "1000",
    "iAircraftImageId" : "1",
    "vAircraftImageName" : "image.jpeg",
    "vAircraftImageThumb" : "thumb.jpeg",
    "tiStatus" : "Confirm",
    "departureDetail" : {
      "iDepartureId" : 1,
      "vId" : "KAIK",
      "vAirportName" : "Aiken Regional Airport",
      "vZipcode" : "29805",
      "vCity" : "Aiken"
    },
    "destinationDetail" : {
      "iDestinationId" : 1,
      "vId" : "KAIK",
      "vAirportName" : "Aiken Regional Airport",
      "vZipcode" : "29805",
      "vCity" : "Aiken"
    },
    "passengersDetail" : [ {
      "iBookingId" : 1,
      "iPassengerId" : 1,
      "vPassengerName" : "P1",
      "vPassengerId" : "/tmp/php9XNa2U",
      "dPassengerDob" : "1992-02-02"
    }, {
      "iBookingId" : 1,
      "iPassengerId" : 2,
      "vPassengerName" : "P2",
      "vPassengerId" : "/tmp/php86tI6I",
      "dPassengerDob" : "1992-02-02"
    } ]
  }, {
    "iTripId" : 2,
    "iBookingId" : 2,
    "iTripType" : 0,
    "iTripBookingType" : 0,
    "iDepartureDate" : 1583020800,
    "iDepartureTime" : 1582628400,
    "iAircraftId" : 1,
    "vAircraftName" : "328 jet",
    "vQrCode" : "http://172.16.17.224/projects/air-charter-booking/public/uploads/qr-code/Booking2.png",
    "dcTotalPrice" : 3212,
    "vAircraftType" : "Jet Airliner",
    "dcPriceForFlight" : 100000,
    "dcPricePerSeat" : 1000,
    "iAircraftImageId" : "1",
    "vAircraftImageName" : "image.jpeg",
    "vAircraftImageThumb" : "thumb.jpeg",
    "tiStatus" : "Confirm",
    "departureDetail" : {
      "iDepartureId" : 1,
      "vId" : "KAIK",
      "vAirportName" : "Aiken Regional Airport",
      "vZipcode" : "29805",
      "vCity" : "Aiken"
    },
    "destinationDetail" : {
      "iDestinationId" : 1,
      "vId" : "KAIK",
      "vAirportName" : "Aiken Regional Airport",
      "vZipcode" : "29805",
      "vCity" : "Aiken"
    },
    "passengersDetail" : [ {
      "iBookingId" : 2,
      "iPassengerId" : 3,
      "vPassengerName" : "P21",
      "vPassengerId" : "/tmp/phpi8xrvC",
      "dPassengerDob" : "1992-02-02"
    } ]
  } ]
}}]
     
     - parameter accessToken: (header)  

     - returns: RequestBuilder<PastFlightsResponse> 
     */
    open class func pastFlightsPostWithRequestBuilder(accessToken: String) -> RequestBuilder<PastFlightsResponse> {
        let path = "/past_flights"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "AccessToken": accessToken
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<PastFlightsResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Seats information
     
     - parameter iTripId: (form) Trip Id 
     - parameter accessToken: (header)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func seatsInformationPost(iTripId: String, accessToken: String, completion: @escaping ((_ data: SeatsInformationResponse?,_ error: Error?) -> Void)) {
        seatsInformationPostWithRequestBuilder(iTripId: iTripId, accessToken: accessToken).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Seats information
     - POST /seats_information
     - examples: [{contentType=application/json, example={
  "message" : "Seats information",
  "data" : {
    "passengersDetail" : {
      "seatsBookedByme" : [ {
        "iBookingId" : 3,
        "iPassengerId" : 4,
        "vPassengerName" : "P31",
        "vPassengerId" : "/tmp/phprC9fv3",
        "dPassengerDob" : "1992-02-02"
      }, {
        "iBookingId" : 3,
        "iPassengerId" : 5,
        "vPassengerName" : "P32",
        "vPassengerId" : "/tmp/php446nDU",
        "dPassengerDob" : "1992-02-02"
      } ],
      "otherPassenger" : [ {
        "iBookingId" : 1,
        "iPassengerId" : 1,
        "vPassengerName" : "P1",
        "vPassengerId" : "/tmp/php9XNa2U",
        "dPassengerDob" : "1992-02-02"
      }, {
        "iBookingId" : 1,
        "iPassengerId" : 2,
        "vPassengerName" : "P2",
        "vPassengerId" : "/tmp/php86tI6I",
        "dPassengerDob" : "1992-02-02"
      } ]
    }
  }
}}]
     
     - parameter iTripId: (form) Trip Id 
     - parameter accessToken: (header)  

     - returns: RequestBuilder<SeatsInformationResponse> 
     */
    open class func seatsInformationPostWithRequestBuilder(iTripId: String, accessToken: String) -> RequestBuilder<SeatsInformationResponse> {
        let path = "/seats_information"
        let URLString = SwaggerClientAPI.basePath + path
        let formParams: [String:Any?] = [
            "iTripId": iTripId
        ]

        let nonNullParameters = APIHelper.rejectNil(formParams)
        let parameters = APIHelper.convertBoolToString(nonNullParameters)
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "AccessToken": accessToken
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<SeatsInformationResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Upcoming Flights
     
     - parameter accessToken: (header)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func upcomingFlightsPost(accessToken: String, completion: @escaping ((_ data: UpcomingFlightsResponse?,_ error: Error?) -> Void)) {
        upcomingFlightsPostWithRequestBuilder(accessToken: accessToken).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Upcoming Flights
     - POST /upcoming_flights
     - examples: [{contentType=application/json, example={
  "message" : "Upcoming Flights information",
  "data" : [ {
    "iTripId" : 1,
    "iBookingId" : 1,
    "iTripType" : 2,
    "iTripBookingType" : 2,
    "iDepartureDate" : 1583020800,
    "iDepartureTime" : 1582628400,
    "iAircraftId" : 2,
    "vAircraftName" : "Regional jet",
    "vQrCode" : "http://172.16.17.224/projects/air-charter-booking/public/uploads/qr-code/Booking1.png",
    "dcTotalPrice" : 2222,
    "iCreatedAt" : 1585294435,
    "vAircraftType" : "Super Mid Jet\\t",
    "dcPriceForFlight" : 100000,
    "dcPricePerSeat" : 1000,
    "iAircraftImageId" : "1",
    "vAircraftImageName" : "image.jpeg",
    "vAircraftImageThumb" : "thumb.jpeg",
    "tiStatus" : "Confirm",
    "departureDetail" : {
      "iDepartureId" : 1,
      "vId" : "KAIK",
      "vAirportName" : "Aiken Regional Airport",
      "vZipcode" : "29805",
      "vCity" : "Aiken"
    },
    "destinationDetail" : {
      "iDestinationId" : 1,
      "vId" : "KAIK",
      "vAirportName" : "Aiken Regional Airport",
      "vZipcode" : "29805",
      "vCity" : "Aiken"
    },
    "passengersDetail" : [ {
      "iBookingId" : 1,
      "iPassengerId" : 1,
      "vPassengerName" : "P1",
      "vPassengerId" : "/tmp/php9XNa2U",
      "dPassengerDob" : "1992-02-02"
    }, {
      "iBookingId" : 1,
      "iPassengerId" : 2,
      "vPassengerName" : "P2",
      "vPassengerId" : "/tmp/php86tI6I",
      "dPassengerDob" : "1992-02-02"
    } ]
  }, {
    "iTripId" : 2,
    "iBookingId" : 2,
    "iTripType" : 0,
    "iTripBookingType" : 0,
    "iDepartureDate" : 1583020800,
    "iDepartureTime" : 1582628400,
    "iAircraftId" : 1,
    "vAircraftName" : "328 jet",
    "vQrCode" : "http://172.16.17.224/projects/air-charter-booking/public/uploads/qr-code/Booking2.png",
    "dcTotalPrice" : 3212,
    "vAircraftType" : "Jet Airliner",
    "dcPriceForFlight" : 100000,
    "dcPricePerSeat" : 1000,
    "iAircraftImageId" : "1",
    "vAircraftImageName" : "image.jpeg",
    "vAircraftImageThumb" : "thumb.jpeg",
    "tiStatus" : "Confirm",
    "departureDetail" : {
      "iDepartureId" : 1,
      "vId" : "KAIK",
      "vAirportName" : "Aiken Regional Airport",
      "vZipcode" : "29805",
      "vCity" : "Aiken"
    },
    "destinationDetail" : {
      "iDestinationId" : 1,
      "vId" : "KAIK",
      "vAirportName" : "Aiken Regional Airport",
      "vZipcode" : "29805",
      "vCity" : "Aiken"
    },
    "passengersDetail" : [ {
      "iBookingId" : 2,
      "iPassengerId" : 3,
      "vPassengerName" : "P21",
      "vPassengerId" : "/tmp/phpi8xrvC",
      "dPassengerDob" : "1992-02-02"
    } ]
  } ]
}}]
     
     - parameter accessToken: (header)  

     - returns: RequestBuilder<UpcomingFlightsResponse> 
     */
    open class func upcomingFlightsPostWithRequestBuilder(accessToken: String) -> RequestBuilder<UpcomingFlightsResponse> {
        let path = "/upcoming_flights"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "AccessToken": accessToken
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<UpcomingFlightsResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

}
